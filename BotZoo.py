import telebot
from config import TOKEN
from utilits import ZooQuiz
bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def process_start_command(message: telebot.types.Message):
    bot.set_state(message.chat.id , state='start')
    text = (f' –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! \n '
            ' –Ø –º–∞–Ω—É–ª –¢–∏–º–æ—Ñ–µ–π –∏–∑ –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞.\n'
            ' –Ø –æ—á–µ–Ω—å –ª—é–±–ª—é –∏–≥—Ä–∞—Ç—å –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –∏ –ø—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ–±–µ —Ç–æ–∂–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å! \n '
            ' –Ø –∫—Å—Ç–∞—Ç–∏ –º–∞–Ω—É–ª (–∫–∞–∫ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ üôÄüôÄüôÄüôÄüôÄüôÄ)! \n'
            ' –ù—É –ª–∞–¥–Ω–æ —Å–∫–æ—Ä–µ–µ –∂–º–∏ –Ω–∞ /play \n'
            '\n'
            ' –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–∞ –∫–∞–∫–∞—è-–ª–∏–±–æ –ø–æ–º–æ—â—å –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∂–º–∏ –Ω–∞ /help ')
    bot.reply_to(message, text)

@bot.message_handler(commands=['help'])
def help(message: telebot.types.Message):
    pass

@bot.message_handler(commands=['play'])
def play(message):
    text = '–û—Ç–ª–∏—á–Ω–æ –¥–∞–≤–∞–π –ø–æ –∏–≥—Ä–∞–µ–º! \n'
    bot.send_message(message.from_user.id, text)
    user_state = bot.get_state(user_id=message.chat.id)
    if user_state == 'start':
        text = ' –ò —Ç–∞–∫ –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å:'
        bot.send_message(message.from_user.id, text)
        bot.set_state(user_id=message.chat.id, state='question')
        display_question(message)
    elif user_state == 'question':
        display_question(message)

@bot.message_handler(content_types='text')
def display_question(message):
    if len(ZooQuiz.questions) != 0 and len(ZooQuiz.questions) > 0:
        question = ZooQuiz.questions[0]
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        answers_keys = list(question['answers'].keys())
        for j in answers_keys:
            btn = telebot.types.KeyboardButton(j)
            markup.add(btn)
        markup.add(telebot.types.KeyboardButton('–ù–∞–∑–∞–¥'))
        bot.send_message(message.from_user.id, question['questions'], reply_markup=markup)
        bot.set_state(user_id=message.chat.id, state='answer')
        check_answer(message)
    else:
        result(message)


def check_answer(message):
    question = ZooQuiz.questions[0]
    answer = message.text
    print(ZooQuiz.points, question['answers'].get(answer), answer)
    for i in list(question['answers'].keys()):
        if answer == i:
            ZooQuiz.points += question['answers'].get(answer)
            ZooQuiz.questions.pop(0)

def result(message):
    pass

bot.polling()